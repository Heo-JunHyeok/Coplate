"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "coplate",
    "widget_tweaks",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
]

SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "coplate.validators.CustomPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "ko"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# MEDIA FILES
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/uploads/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Allauth Settings
AUTH_USER_MODEL = "coplate.User"


AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend",
]

ACCOUNT_SIGNUP_REDIRECT_URL = "index"  # 회원가입 완료시 이동할 url
LOGIN_REDIRECT_URL = "index"  # 로그인 성공시 이동할 url
ACCOUNT_LOGOUT_ON_GET = True  # 로그아웃 페이지를 거치지 않고 바로 로그아웃
ACCOUNT_AUTHENTICATION_METHOD = "email"  # ID로 사용할 field, username_email: 둘 다 허용할 경우
ACCOUNT_EMAIL_REQUIRED = True  # email 필수
ACCOUNT_USERNAME_REQUIRED = False  # username 필수 해제
ACCOUNT_SIGNUP_FORM_CLASS = "coplate.forms.SignupForm"
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = True  # Form에 대한 입력이 오류가 나도 정보가 브라우저에 남음

ACCOUNT_SESSION_REMEMBER = True  # 브라우저 종료 시 세션을 기억할 것인가, 로그인 상태 유지
# 로그아웃이 아닌 쿠키가 만료된 경우 세션은 서버에 남는다.
# 따라서 주기적으로 python manage.py clearsessions 로 정리, 수동적으로 하거나 자동화해서
# SESSION_COOKIE_AGE = 3600  # 세션 유지 시간, 초단위 / default: 2주

# ACCOUNT_EMAIL_VARIFICATION = "optional"
# mandatory : email 인증을 하기 전에 로그인 불가
# optional : email을 발송, 인증하지 않아도 로그인 가능 (default)
# none : email 인증을 하지 않음, 발송도 안함

# email 인증 링크 진입 시 자동 인증, false일 경우 해당 링크에서 confirm클릭 해야 함
ACCOUNT_CONFIRM_EMAIL_ON_GET = True

# 해당 html에서 템플릿 태그로 두 경우를 분류해서 같은 url 적용
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = (
    "account_email_confirmation_done"
)
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = "account_email_confirmation_done"

# PASSWORD_RESET_TIMEOUT=3600 # 단위:초 / default: 3일

# account eamil의 제목 앞에 붙는 문자열 / overwriting 해도 웹사이트의 도메인이 붙기 때문
ACCOUNT_EMIAL_SUBJECT_PREFIX = ""

# Email Settings
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
